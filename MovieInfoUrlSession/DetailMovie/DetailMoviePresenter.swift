//
//  DetailMoviePresenter.swift
//  MovieInfoUrlSession
//
//  Created by Игорь on 10/13/19.
//  Copyright (c) 2019 Igor Zhyzhyrii. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailMoviePresentationLogic {
    func presentDetails(response: DetailMovieModels.ShowDetails.Response)
    func presentTrailer(response: DetailMovieModels.ShowTrailer.Response)
    func presentFavouriteStatus(response: DetailMovieModels.SetFavouriteStatus.Response)
    func presentWatchLaterStatus(response: DetailMovieModels.SetWatchLaterStatus.Response)
    func presentOverviewReview(response: DetailMovieModels.SelectOverviewReviewsSegmentedControl.Response)
}

class DetailMoviePresenter: DetailMoviePresentationLogic {
    
    weak var viewController: DetailMovieDisplayLogic?
    
    // MARK: Do something
    
    func presentDetails(response: DetailMovieModels.ShowDetails.Response) {
        
        let detailMovie = response.detailMovie
        
        let title = detailMovie.title
        let releaseGenre = (detailMovie.releaseDate ?? "") + ", " + (detailMovie.getGenresAsString() ?? "")
       
        var displayedRunTime: String
        if let runTime = detailMovie.runTime {
            displayedRunTime = String(runTime) + " мин"
        } else {
            displayedRunTime = ""
        }
        
        let voteAverage = "\(detailMovie.voteAverage ?? 0)"
        
        let overview = detailMovie.overview
        
        
        
        let isAddedToFavourite = response.isAddedToFavourite
        let isAddedToWatchLater = response.isAddedToWatchLater
        
        let displayedDetails = DetailMovieModels.ShowDetails.ViewModel.DisplayedDetails(movieTitle: title, releaseGenre: releaseGenre, runTime: displayedRunTime, voteAverage: voteAverage, overView: overview, isAddedToFavourite: isAddedToFavourite, isAddedToWatchLater: isAddedToWatchLater)
        
        let viewModel = DetailMovieModels.ShowDetails.ViewModel(displayedDetails: displayedDetails)
        viewController?.displayMovieDetails(viewModel: viewModel)
    }
    
    func presentTrailer(response: DetailMovieModels.ShowTrailer.Response) {
        var trailerUrl: URL? = nil

        if let videoCode = response.videoCode {
            trailerUrl = URL(string: "https://www.youtube.com/embed/\(videoCode)")
        }
        
        let viewModel = DetailMovieModels.ShowTrailer.ViewModel(trailerUrl: trailerUrl)
        viewController?.displayTrailer(viewModel: viewModel)
    }
    
    func presentFavouriteStatus(response: DetailMovieModels.SetFavouriteStatus.Response) {
        let viewModel = DetailMovieModels.SetFavouriteStatus.ViewModel(isAddedToFavourite: response.isAddedToFavourite)
        viewController?.displayFavouriteStatus(viewModel: viewModel)
    }
    
    func presentWatchLaterStatus(response: DetailMovieModels.SetWatchLaterStatus.Response) {
        let viewModel = DetailMovieModels.SetWatchLaterStatus.ViewModel(isAddedToWatchLater: response.isAddedToWatchLater)
        viewController?.displayWatchLaterStatus(viewModel: viewModel)
    }
    
    func presentOverviewReview(response: DetailMovieModels.SelectOverviewReviewsSegmentedControl.Response) {
        let viewModel = DetailMovieModels.SelectOverviewReviewsSegmentedControl.ViewModel(overviewReviews: response.overviewReviews)
        viewController?.displayOverviewReviews(viewModel: viewModel)
    }
}
